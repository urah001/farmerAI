import type { Metadata } from "next";
//import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import { Leaf } from "lucide-react";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import {
  RegisterLink,
  LoginLink,
} from "@kinde-oss/kinde-auth-nextjs/components";
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

const { isAuthenticated } = getKindeServerSession();
const isUserAuthenticated = await isAuthenticated();

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
      // className={`${geistSans.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange
        >
          <header className="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
            <div className="container flex h-16 items-center justify-between">
              <div className="flex items-center gap-2">
                <Leaf className="h-6 w-6 text-green-600" />
                <span className="text-xl font-bold">FarmAI</span>
              </div>
              <nav className="hidden md:flex items-center gap-6">
                <Link href="/dashboard" className="text-sm font-medium">
                  Dashboard
                </Link>
                <Link
                  href="/crop-recommendation"
                  className="text-sm font-medium"
                >
                  Crop Recommendation
                </Link>
                <Link href="/disease-detection" className="text-sm font-medium">
                  Disease Detection
                </Link>
                <Link href="/weather" className="text-sm font-medium">
                  Weather
                </Link>
              </nav>

              {isUserAuthenticated ? (
                <div className="flex items-center gap-4">
                  <RegisterLink>
                    <Button variant="outline" size="sm">
                      Sign Up
                    </Button>
                  </RegisterLink>
                  <LoginLink>
                    <Button size="sm">Login</Button>
                  </LoginLink>
                </div>
              ) : (
                <div></div>
              )}
            </div>
          </header>
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
